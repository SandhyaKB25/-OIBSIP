import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;

class Book {
    int id;
    String title;
    boolean isIssued;

    Book(int id, String title) {
        this.id = id;
        this.title = title;
        this.isIssued = false;
    }
}

class User {
    int id;
    String name;

    User(int id, String name) {
        this.id = id;
        this.name = name;
    }
}

class Library {
    ArrayList<Book> books = new ArrayList<>();
    ArrayList<User> users = new ArrayList<>();
    HashMap<Integer, Integer> issuedBooks = new HashMap<>(); // bookId -> userId

    // Admin functions
    void addBook(Book book) {
        books.add(book);
    }

    void removeBook(int bookId) {
        books.removeIf(book -> book.id == bookId);
    }

    void addUser(User user) {
        users.add(user);
    }

    void removeUser(int userId) {
        users.removeIf(user -> user.id == userId);
    }

    // User functions
    void issueBook(int userId, int bookId) {
        for (Book book : books) {
            if (book.id == bookId && !book.isIssued) {
                book.isIssued = true;
                issuedBooks.put(bookId, userId);
                System.out.println("Book issued successfully!");
                return;
            }
        }
        System.out.println("Book is already issued or not available!");
    }

    void returnBook(int bookId) {
        for (Book book : books) {
            if (book.id == bookId && book.isIssued) {
                book.isIssued = false;
                issuedBooks.remove(bookId);
                System.out.println("Book returned successfully!");
                return;
            }
        }
        System.out.println("Book is not issued!");
    }

    void viewBooks() {
        for (Book book : books) {
            System.out.println("Book ID: " + book.id + ", Title: " + book.title + ", Issued: " + book.isIssued);
        }
    }

    // User query via email (simulated)
    void sendQuery(String userName, String userEmail, String query) {
        System.out.println("Sending query from " + userName + " (" + userEmail + ")...");
        System.out.println("Query: " + query);
        System.out.println("Query sent successfully!");
    }
}

public class LibraryManagementSystem {
    public static void main(String[] args) {
        Library library = new Library();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("1. Add Book (Admin)");
            System.out.println("2. Remove Book (Admin)");
            System.out.println("3. Add User (Admin)");
            System.out.println("4. Remove User (Admin)");
            System.out.println("5. Issue Book (User)");
            System.out.println("6. Return Book (User)");
            System.out.println("7. View Books (User)");
            System.out.println("8. Send Query (User)");
            System.out.println("9. Exit");
            System.out.print("Enter choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); // consume newline

            switch (choice) {
                case 1: // Add Book
                    System.out.print("Enter book ID: ");
                    int bookId = scanner.nextInt();
                    scanner.nextLine(); // consume newline
                    System.out.print("Enter book title: ");
                    String bookTitle = scanner.nextLine();
                    library.addBook(new Book(bookId, bookTitle));
                    System.out.println("Book added successfully!");
                    break;
                case 2: // Remove Book
                    System.out.print("Enter book ID to remove: ");
                    int removeBookId = scanner.nextInt();
                    library.removeBook(removeBookId);
                    System.out.println("Book removed successfully!");
                    break;
                case 3: // Add User
                    System.out.print("Enter user ID: ");
                    int userId = scanner.nextInt();
                    scanner.nextLine(); // consume newline
                    System.out.print("Enter user name: ");
                    String userName = scanner.nextLine();
                    library.addUser(new User(userId, userName));
                    System.out.println("User added successfully!");
                    break;
                case 4: // Remove User
                    System.out.print("Enter user ID to remove: ");
                    int removeUserId = scanner.nextInt();
                    library.removeUser(removeUserId);
                    System.out.println("User removed successfully!");
                    break;
                case 5: // Issue Book
                    System.out.print("Enter user ID: ");
                    int issueUserId = scanner.nextInt();
                    System.out.print("Enter book ID to issue: ");
                    int issueBookId = scanner.nextInt();
                    library.issueBook(issueUserId, issueBookId);
                    break;
                case 6: // Return Book
                    System.out.print("Enter book ID to return: ");
                    int returnBookId = scanner.nextInt();
                    library.returnBook(returnBookId);
                    break;
                case 7: // View Books
                    library.viewBooks();
                    break;
                case 8: // Send Query
                    System.out.print("Enter your name: ");
                    String queryUserName = scanner.nextLine();
                    System.out.print("Enter your email: ");
                    String queryUserEmail = scanner.nextLine();
                    System.out.print("Enter your query: ");
                    String query = scanner.nextLine();
                    library.sendQuery(queryUserName, queryUserEmail, query);
                    break;
                case 9: // Exit
                    scanner.close();
                    System.out.println("Exiting...");
                    return;
                default:
                    System.out.println("Invalid choice! Please try again.");
            }
        }
    }
}
